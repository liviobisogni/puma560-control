%% Parametri dinamici

%% Vettore dei parametri non considerante gli attriti

% [L_ixx, L_ixy, L_ixz, L_iyy, L_iyz, L_izz, l_ix, l_iy, l_iz, m_i],        i = 1, ..., 6
% i.e.,
% [L_1xx, L_1xy, L_1xz, L_1yy, L_1yz, L_1zz, l_1x, l_1y, l_1z, m_1, ...
%  L_2xx, L_2xy, L_2xz, L_2yy, L_2yz, L_2zz, l_2x, l_2y, l_2z, m_2, ...
%  L_3xx, L_3xy, L_3xz, L_3yy, L_3yz, L_3zz, l_3x, l_3y, l_3z, m_3, ...
%  L_4xx, L_4xy, L_4xz, L_4yy, L_4yz, L_4zz, l_4x, l_4y, l_4z, m_4, ...
%  L_5xx, L_5xy, L_5xz, L_5yy, L_5yz, L_5zz, l_5x, l_5y, l_5z, m_5, ...
%  L_6xx, L_6xy, L_6xz, L_6yy, L_6yz, L_6zz, l_6x, l_6y, l_6z, m_6]
% Where:
%   * L is the link inertia tensor computed about the link frame;
%   * l is the link first moment of inertia;
%   * m is the link mass.
% These are the so-called barycentric parameters, with respect to which the dynamic model is linear.

joint_num = p560.n;
pi_real = zeros(1, joint_num*10);                       % dimensione 1x60 
pi_est_0 = zeros(1, joint_num*10);                      % dimensione 1x60 


for i = 1:joint_num
    
    %% p560
    I = p560.links(i).I;                    % inertia tensor about the COM
    r = p560.links(i).r;                    % center of mass (COM) position vector, relatively to the link frame
    m = p560.links(i).m;                    % link mass
    L = I + m * skew(r)' * skew(r);         % inertia tensor about the link frame    
    l = m * r;                              % first moment of inertia
    
    pi_real((i-1)*10+1:i*10) = [L(1,1), ...
                                L(1,2), ...
                                L(1,3), ...   
                                L(2,2), ...
                                L(2,3), ...
                                L(3,3), ...
                                l(1), ...
                                l(2), ...
                                l(3), ...
                                m];
                            
    
    %% p560_est
    I_est = p560_est.links(i).I;                        % inertia tensor about the COM
    r_est = p560_est.links(i).r;                        % center of mass (COM) position vector, relatively to the link frame
    m_est = p560_est.links(i).m;                        % link mass
    L_est = I_est + m_est * skew(r_est)' * skew(r_est); % inertia tensor about the link frame
    l_est = m_est * r_est;                              % first moment of inertia
    
    pi_est_0((i-1)*10+1:i*10) = [L_est(1,1), ...
                                 L_est(1,2), ...
                                 L_est(1,3), ...   
                                 L_est(2,2), ...
                                 L_est(2,3), ...
                                 L_est(3,3), ...
                                 l_est(1), ...
                                 l_est(2), ...
                                 l_est(3), ...
                                 m_est];                       
    
end


% dynparm_test = [0.0, -0, -0, 0.34999999999999998, -0, 0.0, 0.0, 0.0, 0.0, 0, 1.03118515, 0.037980719999999996, 1.4401022999999999, ...
%                 3.7274564059999999, -0.023751000000000001, 2.8425240559999998, -6.33012, 0.10439999999999999, 3.9585, 17.4, ...
%                 0.090474288000000014, -0.0013739039999999998, 0.0068208000000000001, 0.111498032, 0.0047375999999999998, ...
%                 0.015432319999999999, -0.09743999999999998, -0.06767999999999999, 0.336, 4.8, 0.0020960200000000001, -0, -0, ...
%                 0.0012999999999999999, -0, 0.0020960200000000001, 0.0, 0.015579999999999998, 0.0, 0.82, 0.00029999999999999997, -0, -0, ...
%                 0.00040000000000000002, -0, 0.00029999999999999997, 0.0, 0.0, 0.0, 0.34, 0.00024216, -0, -0, 0.00024216, -0, ...
%                 4.0000000000000003e-05, 0.0, 0.0, 0.0028799999999999997, 0.09];
